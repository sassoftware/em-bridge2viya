<?xml version="1.0" encoding="UTF-8"?><_ROOT_ EMVERSION="14.2" ORIENTATION="HORIZONTAL">
<Workspace>
<NODES>
<NODE CLASS="SASHELP.EMCORE.EXTENSION.CLASS" COMPONENT="HPDMNeural" ID="HPNNA" X="462" Y="66" DESCRIPTION="HP Neural" DIAGRAMID="_ROOT_" PARENTID="" TOOLTYPE="MODEL" TOOLPREFIX="HPNNA">
<PROPERTIES Location="CATALOG" Catalog="SASHELP.HPDM.HPDMNeural.SOURCE" ToolType="MODEL" InputStd="RANGE" HIDDEN="3" HIDDENLAYERS="3" ARCHITECTURE="LAYER1" DIRECTCONN="N" TargetStd="RANGE" TargetActivation="IDENTITY" TargetError="NORMAL" OPTMETHOD="LBFGS" NUMTRIES="2" MAXITER="300" USEVALID="N" USEINVERSE="N" MISSASLVL="N" MAXLINKS="1000" ForceRun="N" RunAction="Train" Component="HPDMNeural" TableEditor="">
<VariableProperties/>
<EmTargetAttributes/>
<EmVariableAttributes/>
<EmFileProperties>
<USERTRAINCODE Type="EXTERNAL" Extension="sas">
<Data/>
</USERTRAINCODE>
<HIDDENOPTIONS Type="DATA">
<Data/>
<Metadata/>
</HIDDENOPTIONS>
<EMNOTES Type="EXTERNAL" Extension="txt">
<Data/>
</EMNOTES>
</EmFileProperties>
</PROPERTIES>
</NODE>
<NODE CLASS="SASHELP.EMSAMP.IDS.CLASS" COMPONENT="DataSource" ID="Ids" X="66" Y="66" DESCRIPTION="HMEQ-BAD" DIAGRAMID="_ROOT_" PARENTID="" TOOLTYPE="SAMPLE" TOOLPREFIX="Ids">
<PROPERTIES Component="DataSource" Description="" Role="RAW" Library="SAMPSIO" Table="HMEQ" ForceRun="Y" ComputeStatistics="N" DataSource="" DataSelection="USERTABLE" NewTable="SAMPSIO.HMEQ" OutputType="VIEW" MetaAdvisor="BASIC" ApplyIntervalLevelLowerLimit="Y" IntervalLowerLimit="20" ApplyMaxPercentMissing="Y" MaxPercentMissing="50" MaxClassLevels="20" IdentifyEmptyColumns="Y" VariableValidation="STRICT" NewVariableRole="REJECT" Sample="D" SampleSizeType="PERCENT" SampleSizePercent="20" SampleSizeObs="10000" DBPassThrough="Y" NObs="5960" NCols="13" NBytes="656384" Segment="" ApplyMaxClassLevels="Y" DropMapVariables="N">
<EmVariableAttributes>
<DELTA Variable="BAD" AttributeName="ROLE" AttributeValue="TARGET"/>
<DELTA Variable="BAD" AttributeName="LEVEL" AttributeValue="BINARY"/>
<DELTA Variable="DELINQ" AttributeName="LEVEL" AttributeValue="NOMINAL"/>
<DELTA Variable="DEROG" AttributeName="LEVEL" AttributeValue="NOMINAL"/>
<DELTA Variable="NINQ" AttributeName="LEVEL" AttributeValue="NOMINAL"/>
<DELTA Variable="REASON" AttributeName="LEVEL" AttributeValue="BINARY"/>
</EmVariableAttributes>
<EmTargetAttributes>
<BAD>
<DecData Table="EMWS2.Ids_BAD_DD">
<Data>
<Obs BAD="1" COUNT="1189" DATAPRIOR="0.1994966443" TRAINPRIOR="0.1994966443" DECPRIOR="." DECISION1="1" DECISION2="0"/>
<Obs BAD="0" COUNT="4771" DATAPRIOR="0.8005033557" TRAINPRIOR="0.8005033557" DECPRIOR="." DECISION1="0" DECISION2="1"/>
</Data>
<Metadata>
<Variable NAME="BAD" LABEL="" LENGTH="32" FORMAT="" TYPE="C"/>
<Variable NAME="COUNT" LABEL="Level Counts" LENGTH="8" FORMAT="10." TYPE="N"/>
<Variable NAME="DATAPRIOR" LABEL="Data Proportions" LENGTH="8" FORMAT="" TYPE="N"/>
<Variable NAME="TRAINPRIOR" LABEL="Training Proportions" LENGTH="8" FORMAT="" TYPE="N"/>
<Variable NAME="DECPRIOR" LABEL="Decision Priors" LENGTH="8" FORMAT="" TYPE="N"/>
<Variable NAME="DECISION1" LABEL="1" LENGTH="8" FORMAT="" TYPE="N"/>
<Variable NAME="DECISION2" LABEL="0" LENGTH="8" FORMAT="" TYPE="N"/>
</Metadata>
</DecData>
<DecMeta Table="EMWS2.Ids_BAD_DM">
<Data>
<Obs _TYPE_="MATRIX" VARIABLE="" LABEL="" LEVEL="PROFIT" EVENT="" ORDER="" FORMAT="" TYPE="" COST="" USE="N"/>
<Obs _TYPE_="TARGET" VARIABLE="BAD" LABEL="" LEVEL="BINARY" EVENT="1" ORDER="" FORMAT="" TYPE="N" COST="" USE=""/>
<Obs _TYPE_="DECISION" VARIABLE="DECISION1" LABEL="1" LEVEL="" EVENT="" ORDER="" FORMAT="" TYPE="N" COST="" USE="Y"/>
<Obs _TYPE_="DECISION" VARIABLE="DECISION2" LABEL="0" LEVEL="" EVENT="" ORDER="" FORMAT="" TYPE="N" COST="" USE="Y"/>
<Obs _TYPE_="DATAPRIOR" VARIABLE="DATAPRIOR" LABEL="Data Prior" LEVEL="" EVENT="" ORDER="" FORMAT="" TYPE="N" COST="" USE="N"/>
<Obs _TYPE_="TRAINPRIOR" VARIABLE="TRAINPRIOR" LABEL="Training Prior" LEVEL="" EVENT="" ORDER="" FORMAT="" TYPE="N" COST="" USE="N"/>
<Obs _TYPE_="DECPRIOR" VARIABLE="DECPRIOR" LABEL="Decision Prior" LEVEL="" EVENT="" ORDER="" FORMAT="" TYPE="N" COST="" USE="N"/>
<Obs _TYPE_="PREDICTED" VARIABLE="P_BAD1" LABEL="Predicted: BAD=1" LEVEL="1" EVENT="" ORDER="" FORMAT="" TYPE="N" COST="" USE=""/>
<Obs _TYPE_="RESIDUAL" VARIABLE="R_BAD1" LABEL="Residual: BAD=1" LEVEL="1" EVENT="" ORDER="" FORMAT="" TYPE="N" COST="" USE=""/>
<Obs _TYPE_="PREDICTED" VARIABLE="P_BAD0" LABEL="Predicted: BAD=0" LEVEL="0" EVENT="" ORDER="" FORMAT="" TYPE="N" COST="" USE=""/>
<Obs _TYPE_="RESIDUAL" VARIABLE="R_BAD0" LABEL="Residual: BAD=0" LEVEL="0" EVENT="" ORDER="" FORMAT="" TYPE="N" COST="" USE=""/>
<Obs _TYPE_="FROM" VARIABLE="F_BAD" LABEL="From: BAD" LEVEL="" EVENT="" ORDER="" FORMAT="" TYPE="C" COST="" USE=""/>
<Obs _TYPE_="INTO" VARIABLE="I_BAD" LABEL="Into: BAD" LEVEL="" EVENT="" ORDER="" FORMAT="" TYPE="C" COST="" USE=""/>
</Data>
<Metadata>
<Variable NAME="_TYPE_" LABEL="Type" LENGTH="32" FORMAT="" TYPE="C"/>
<Variable NAME="VARIABLE" LABEL="Variable" LENGTH="32" FORMAT="" TYPE="C"/>
<Variable NAME="LABEL" LABEL="Label" LENGTH="256" FORMAT="" TYPE="C"/>
<Variable NAME="LEVEL" LABEL="Measurement Level" LENGTH="32" FORMAT="" TYPE="C"/>
<Variable NAME="EVENT" LABEL="Target Event" LENGTH="32" FORMAT="" TYPE="C"/>
<Variable NAME="ORDER" LABEL="Order" LENGTH="10" FORMAT="" TYPE="C"/>
<Variable NAME="FORMAT" LABEL="Format" LENGTH="32" FORMAT="" TYPE="C"/>
<Variable NAME="TYPE" LABEL="Type" LENGTH="1" FORMAT="" TYPE="C"/>
<Variable NAME="COST" LABEL="Cost" LENGTH="32" FORMAT="" TYPE="C"/>
<Variable NAME="USE" LABEL="Use" LENGTH="1" FORMAT="" TYPE="C"/>
</Metadata>
</DecMeta>
</BAD>
</EmTargetAttributes>
<EmFileProperties>
<EMNOTES Type="EXTERNAL" Extension="txt">
<Data/>
</EMNOTES>
</EmFileProperties>
</PROPERTIES>
</NODE>
<NODE CLASS="SASHELP.EMASSMT.ASSESS.CLASS" COMPONENT="ModelCompare" ID="MdlComp" X="660" Y="99" DESCRIPTION="Model Comparison" DIAGRAMID="_ROOT_" PARENTID="" TOOLTYPE="ASSESS" TOOLPREFIX="MdlComp">
<PROPERTIES NumberOfReportedLevels="1E-6" NormalizeReportingVariables="Y" DecileBin="20" LiftEpsilon="1E-6" ProfitEpsilon="1E-6" RoiEpsilon="1E-6" ScoreDistBin="20" RocChart="Y" RocEpsilon="0.01" AssessAllTargetLevels="N" SelectionData="GRID" HPCriteria="DEFAULT" intervalViyaCriteria="DEFAULT" classViyaCriteria="DEFAULT" SelectionTable="TRAIN" SelectionCriteria="DEFAULT" SelectionDepth="10" NumberofBins="20" RecomputeAssess="N" TargetName="BAD" ModelId="HPNNA" ModelDescription="HP Neural" ModelCriteria="Train: Misclassification Rate" ForceRun="N" RunAction="Train" Component="ModelCompare" StatisticUsed="_MISC_" TargetLabel="">
<VariableProperties/>
<EmTargetAttributes/>
<EmVariableAttributes/>
<EmFileProperties>
<EMNOTES Type="EXTERNAL" Extension="txt">
<Data/>
</EMNOTES>
</EmFileProperties>
</PROPERTIES>
</NODE>
<NODE CLASS="SASHELP.EMCORE.EMCODETOOL.CLASS" COMPONENT="SASViya" ID="Viya" X="264" Y="66" DESCRIPTION="SAS Viya varimpute" DIAGRAMID="_ROOT_" PARENTID="" TOOLTYPE="MODEL" TOOLPREFIX="Viya">
<PROPERTIES UsePriors="Y" ToolType="MODEL" DataNeeded="N" PublishCode="PUBLISH" ScoreCodeFormat="DATASTEP" MetaAdvisor="BASIC" ForceRun="Y" intervalCriteria="DEFAULT" classCriteria="DEFAULT" SelectionDepth="10" SelectionTable="TRAIN" RunAction="Train" Component="SASViya" Interactive="" CASSessionId="" CASPort="" CASSessRef="" CASHost="" NeedRun="Y" NeedUpdate="Y">
<VariableProperties/>
<EmTargetAttributes/>
<EmVariableAttributes/>
<EmFileProperties>
<USERTRAINCODE Type="EXTERNAL" Extension="sas">
<Data><![CDATA[
/*---------------------------------------------------------------*
*
* Setup the CAS information
*
* Note that the cashost and casport can be specified in the EM project
* startup code using the em_casHost and em_casPort macro variables.
*
*----------------------------------------------------------------*/
 
%let caslib  =CASUSER;
%let casuser =&lt;username&gt;;
 
/*---------------------------------------------------------------*
*
* Set up the signon information to the SAS Viya Server
*
* Note that the viyahost and viyaport can be specified in the EM project
* startup code using the em_viyaHost and em_viyaPort macro variables.
*
*----------------------------------------------------------------*/
 
%let viyaUser=&lt;username&gt;;
%let viyaPwd =&lt;password&gt;;  *encode your password with PROC PWENCODE;
 
/*---------------------------------------------------------------*
*
* Establish a connection to SASviya machine
*
*----------------------------------------------------------------*/
%em_viya_signon;
 
/*---------------------------------------------------------------*
*
* Prepare the training data and upload it to the SAS Viya machine
* Create a CAS session and assign the CAS library.  The em_viya_dataprep
* macro  assumes that a connection has been established with the SAS Viya server.
* em_casdata= macro variable identifying the training data
* em_casLib = macro variable identifying the CAS library
*
*----------------------------------------------------------------*/
 
%em_viya_dataprep;
 
/*---------------------------------------------------------------*
*
* Setting up macro variables in SASViya
*
* Variables:
*    em_interval_input    = interval inputs
*    em_binary_input      = binary inputs
*    em_nominal_input     = nominal inputs
*    em_ordinal_input     = ordinal inputs
*    em_interval_rejected = interval rejected
*    em_binary_rejected   = binary rejected
*    em_nominal_rejected  = nominal rejected
*    em_ordinal_rejected  = ordinal rejected
*
* Target information:
*    em_dec_target        = target variable
*    em_dec_level         = measurement level of target variable
*
* Files:
*    em_viya_nodedir      = node folder on the SAS Viya machine
*    em_file_scorecode    = score code file
*    em_file_cdelta_train = metadata file to modify the metadata exported by the node
*    em_file_odsfile      = ods output file
*    em_file_astore       = local analytic store file
*    em_data_rstore       = analytic store CAS table
*    em_data_roc          = ROC CAS table;
*    em_data_lift         = Lift CAS table;
*    em_data_fitstat      = Fit Statistic CAS table
*
*----------------------------------------------------------------*/
 
%em_register(key=varImputeInfo, type=DATA);
%em_register(key=imputeInfo, type=DATA);
%em_register(key=imputeddata, type=DATA, cas=y);
 
%em_viya_setMacroVars;
 
 /*---------------------------------------------------------------*
*
* User Code
*
*----------------------------------------------------------------*/
 
rsubmit;
 
   proc varimpute data=&amp;em_casdata;
	   input %em_interval_input / ctech=mean;
	   input %em_nominal_input / ctech=median;
	   output out=&amp;em_user_imputeddata copyvars=(_all_);
      code file=&quot;&amp;em_file_scorecode&quot;;
      ods output VarImputeInfo=&amp;em_user_varimputeinfo ImputeInfo=&amp;em_user_imputeinfo;	
   run;
 
endrsubmit;
 
/*---------------------------------------------------------------*
*
* The em_viya_report macro processes assessment tables, score code, as
* well as table and files specified via the em_register macro and downloads
* them from the SAS Viya machine to the EM diagram and node folders.
*
*----------------------------------------------------------------*/
 
%em_report(key=varImputeInfo, viewtype=DATA, description=VARIMPUTE-Variables Imputation Information,  Block=SAS Viya Reports, autodisplay=y);
%em_report(key=imputeInfo, viewtype=DATA, description=VARIMPUTE-Imputation Information,  Block=SAS Viya Reports, autodisplay=y);
 
%em_viya_report;
 
/* Change metadata */

filename _cfref &quot;&amp;EM_FILE_CDELTA_TRAIN&quot;;
data _null_;
    length string $100;
    set &amp;em_user_varImputeInfo;
    file _cfref;
    string = 'if NAME=&quot;'!!trim(variable)!!'&quot; then ROLE=&quot;REJECTED&quot;;';
    put string;
    string = 'else if NAME=&quot;'!!trim(resultvar)!!'&quot; then ROLE=&quot;INPUT&quot;;';
    put string;
run;
filename _cfref;
 
/*---------------------------------------------------------------*
*
* The em_viya_terminate terminates the CAS session as well as end
* the connection to the SAS Viya machine
*
*----------------------------------------------------------------*/
 
%em_viya_terminate;
 
 
 
 
 
]]>
</Data>
</USERTRAINCODE>
<EMNOTES Type="EXTERNAL" Extension="txt">
<Data/>
</EMNOTES>
</EmFileProperties>
</PROPERTIES>
</NODE>
<NODE CLASS="SASHELP.EMCORE.EMCODETOOL.CLASS" COMPONENT="SASViya" ID="Viya2" X="462" Y="165" DESCRIPTION="SAS Viya supervised learning" DIAGRAMID="_ROOT_" PARENTID="" TOOLTYPE="MODEL" TOOLPREFIX="Viya">
<PROPERTIES UsePriors="Y" ToolType="MODEL" DataNeeded="N" PublishCode="PUBLISH" ScoreCodeFormat="DATASTEP" MetaAdvisor="BASIC" ForceRun="N" intervalCriteria="DEFAULT" classCriteria="DEFAULT" SelectionDepth="10" SelectionTable="TRAIN" RunAction="Train" Component="SASViya" Interactive="" CASSessionId="" CASPort="" CASSessRef="" CASHost="">
<VariableProperties/>
<EmTargetAttributes/>
<EmVariableAttributes/>
<EmFileProperties>
<USERTRAINCODE Type="EXTERNAL" Extension="sas">
<Data><![CDATA[
/*---------------------------------------------------------------*
*
* Setup the CAS information
*
* Note that the cashost and casport can be specified in the EM project
* startup code using the em_casHost and em_casPort macro variables.
*
*----------------------------------------------------------------*/
 
   %let caslib  =CASUSER;
   %let casuser =&lt;username&gt;;
 
/*---------------------------------------------------------------*
*
* Set up the signon information to the SAS Viya Server
*
* Note that the viyahost and viyaport can be specified in the EM project
* startup code using the em_viyaHort and em_viyaPort macro variables.
*
*----------------------------------------------------------------*/
 
   %let viyaUser=&lt;username&gt;;
   %let viyaPwd =&lt;password&gt;; *encode your password with PROC PWENCODE;

/*---------------------------------------------------------------*
*
* Establish a connection to SASviya machine
*
*----------------------------------------------------------------*/
   %em_viya_signon;
 
/*---------------------------------------------------------------*
*
* Prepare the training data and upload it to the SAS Viya machine
* Create a CAS session and assign the CAS library.  The em_viya_dataprep
* macro  assumes that a connection has been established with the SAS Viya server.
* em_casdata= macro variable identifying the training data
* em_casLib = macro variable identifying the CAS library
*
*----------------------------------------------------------------*/
 
   %em_viya_dataprep;
 
/*---------------------------------------------------------------*
*
* Setting up macro variables in SASViya
*
* Variables:
*    em_interval_input    = interval inputs
*    em_binary_input      = binary inputs
*    em_nominal_input     = nominal inputs
*    em_ordinal_input     = ordinal inputs
*    em_interval_rejected = interval rejected
*    em_binary_rejected   = binary rejected
*    em_nominal_rejected  = nominal rejected
*    em_ordinal_rejected  = ordinal rejected
*
* Target information:
*    em_dec_target        = target variable
*    em_dec_level         = measurement level of target variable
*
* Files:
*    em_viya_nodedir      = node folder on the SAS Viya machine
*    em_file_scorecode    = score code file
*    em_file_cdelta_train = metadata file to modify the metadata exported by the node
*    em_file_odsfile      = ods output file
*    em_file_astore       = local analytic store file
*    em_data_rstore       = analytic store CAS table
*    em_data_roc          = ROC CAS table;
*    em_data_lift         = Lift CAS table;
*    em_data_fitstat      = Fit Statistic CAS table
*
*----------------------------------------------------------------*/
   %em_register(key=varImportance1, type=DATA);
   %em_register(key=varImportance2, type=DATA);
   %em_register(key=varImportance3, type=DATA);
 
   %em_viya_setMacroVars;
 
 
/*---------------------------------------------------------------*
*
* User Code
*
*----------------------------------------------------------------*/
   rsubmit;
      proc nnet data=&amp;em_casdata;
         target %em_target /level=&amp;em_dec_level;
         hidden 3;
         input %em_interval_input / level=interval;
         input %em_nominal_input  / level=nominal;
         train outmodel=&amp;em_caslib..outmodel;
        architecture MLP;
         optimization alg=SGD;
         autotune maxiters=5 maxevals=5 maxtime=200 popsize=2;
         &amp;em_partition_statement;
         code file=&quot;&amp;em_file_scorecode&quot;;
         score out=&amp;em_casout copyvars=(%em_target &amp;em_partitionvar);
      run;
   endrsubmit;
  %em_viya_assess(name=Neural);
 
   rsubmit;
      proc svmachine data=&amp;em_casdata maxiter=26 noscale usemiss tolerance=1.0E-7 c=1;
         target %em_target /level=&amp;em_dec_level;
         input %em_interval_input / level=interval;
         input %em_nominal_input  / level=nominal;
         code file=&quot;&amp;em_file_scorecode&quot;;
         score out=&amp;em_casout copyvars=(%em_target &amp;em_partitionvar);
      run;
   endrsubmit;
  %em_viya_assess(name=SVM);
 
   rsubmit;
      proc treesplit data=&amp;em_casdata;
         target %em_target /level=&amp;em_dec_level;
         input %em_interval_input / level=interval;
         input %em_nominal_input  / level=nominal;
         prune reducederror;
         &amp;em_partition_statement;
         code file=&quot;&amp;em_file_scorecode&quot;;
         ods output variableImportance=&amp;em_user_varimportance1;
      run;
   endrsubmit;
  %em_viya_assess(name=Tree1);
 
   rsubmit;
      proc treesplit data=&amp;em_casdata maxdepth=5 numbin=8;
         target %em_target /level=&amp;em_dec_level;
         input %em_interval_input / level=interval;
         input %em_nominal_input  / level=nominal;
         prune reducederror;
         &amp;em_partition_statement;
         code file=&quot;&amp;em_file_scorecode&quot;;
         ods output variableImportance=&amp;em_user_varimportance2;
      run;
   endrsubmit;
  %em_viya_assess(name=Tree2);
 
   %em_viya_modelselection;
 
/*---------------------------------------------------------------*
*
* The em_viya_report macro processes assessment tables, score code, as
* well as table and files specified via the em_register macro and downloads
* them from the SAS Viya machine to the EM diagram and node folders.
*
*----------------------------------------------------------------*/
   %em_report(key=varImportance1, viewtype=DATA, description=Variable Importance Tree1,  Block=SAS Viya Reports);
   %em_report(key=varImportance2, viewtype=DATA, description=Variable Importance Tree2,  Block=SAS Viya Reports);
   %em_report(key=varImportance3, viewtype=DATA, description=Variable Importance Forest, Block=SAS Viya Reports);
   %em_viya_report;
 
/*---------------------------------------------------------------*
*
* The em_viya_terminate terminates the CAS session as well as end
* the connection to the SAS Viya machine
*
*----------------------------------------------------------------*/
   %em_viya_terminate;
 
 
 
 
 
 
 
 
]]>
</Data>
</USERTRAINCODE>
<EMNOTES Type="EXTERNAL" Extension="txt">
<Data/>
</EMNOTES>
</EmFileProperties>
</PROPERTIES>
</NODE>
</NODES>
<CONNECTIONS>
<CONNECTION FROM="Ids" TO="Viya"/>
<CONNECTION FROM="Viya" TO="HPNNA"/>
<CONNECTION FROM="Viya" TO="Viya2"/>
<CONNECTION FROM="Viya2" TO="MdlComp"/>
<CONNECTION FROM="HPNNA" TO="MdlComp"/>
</CONNECTIONS>
<NOTES>
<DATA><![CDATA[

]]>
</DATA>
</NOTES>
</Workspace>
</_ROOT_>
